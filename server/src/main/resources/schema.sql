CREATE TABLE IF NOT EXISTS USERS
(
    ID    BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    NAME  VARCHAR(255)                            NOT NULL,
    EMAIL VARCHAR(512)                            NOT NULL,
    CONSTRAINT un_email UNIQUE (EMAIL),
    CONSTRAINT USERS_PK
        PRIMARY KEY (ID)
);

CREATE TABLE IF NOT EXISTS ITEMS
(
    ID           BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    NAME         VARCHAR(255)                            NOT NULL,
    DESCRIPTION  VARCHAR(512)                            NOT NULL,
    IS_AVAILABLE BOOLEAN                                 NOT NULL,
    OWNER_ID     BIGINT,
    REQUEST_ID   BIGINT,
    CONSTRAINT ITEMS_PK
        PRIMARY KEY (ID),
    CONSTRAINT ITEMS_USERS_ID_FK
        FOREIGN KEY (OWNER_ID) REFERENCES USERS (ID)
);

CREATE TABLE IF NOT EXISTS BOOKINGS
(
    ID         BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    START_DATE TIMESTAMP,
    END_DATE   TIMESTAMP,
    ITEM_ID    BIGINT,
    BOOKER_ID  BIGINT,
    STATUS     VARCHAR(10),
    CONSTRAINT BOOKINGS_PK
        PRIMARY KEY (ID),
    CONSTRAINT BOOKINGS_ITEMS_ID_FK
        FOREIGN KEY (ITEM_ID) REFERENCES ITEMS (ID),
    CONSTRAINT BOOKINGS_USERS_ID_FK
        FOREIGN KEY (BOOKER_ID) REFERENCES USERS (ID)
);

CREATE TABLE IF NOT EXISTS COMMENTS
(
    ID        BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    TEXT      VARCHAR(1000),
    ITEM_ID   BIGINT,
    AUTHOR_ID BIGINT,
    CREATED   TIMESTAMP,
    CONSTRAINT COMMENTS_PK
        PRIMARY KEY (ID),
    CONSTRAINT COMMENTS_ITEMS_ID_FK
        FOREIGN KEY (ITEM_ID) REFERENCES ITEMS (ID),
    CONSTRAINT COMMENTS_USERS_ID_FK
        FOREIGN KEY (AUTHOR_ID) REFERENCES USERS (ID)
);

CREATE TABLE IF NOT EXISTS REQUESTS
(
    ID           BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    REQUESTOR_ID BIGINT                      NOT NULL,
    DESCRIPTION  VARCHAR(200)                NOT NULL,
    CREATED      TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    CONSTRAINT FK_REQUESTOR
        FOREIGN KEY (REQUESTOR_ID) REFERENCES USERS (ID)
);

